				fname=in3.readUTF();
					mac=in3.readUTF();
					String ct=in3.readUTF();
					String sp1=in3.readUTF();
					String sp2=in3.readUTF();
					String sp3=in3.readUTF();
					String sp4=in3.readUTF();
					String sp5=in3.readUTF();
					String dest=in3.readUTF();
					String destip=in3.readUTF();
					
					int fsize=ct.length();
					SimpleDateFormat dateFormat = new SimpleDateFormat();
				    Date date = new Date();
				    String dt=dateFormat.format(date);

					int len = fname.length();
					String file = fname.substring(0, len-5);
					
					PrintStream out99 = null;
					try {
					    out99 = new PrintStream(new FileOutputStream("Router\\"+file+".txt"));
					    out99.print(ct);
					    
					}
					finally {
					    if (out99 != null) out99.cl
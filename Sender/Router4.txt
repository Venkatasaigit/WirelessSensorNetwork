tIcon(c4);
		c44.setBounds(350, 220, 500,200);
		p1.add(c44);
		
		l34=new JLabel();
		l34.setBounds(420, 220, 500,200);
		p1.add(l34);
		
		c5=new ImageIcon(this.getClass().getResource("black.jpg"));
		c55=new JLabel("Node13");
		c55.setIcon(c5);
		c55.setBounds(450, 220, 500,200);
		p1.add(c55);
		
		l35=new JLabel();
		l35.setBounds(520, 220, 500,200);
		p1.add(l35);
		
		c6=new ImageIcon(this.getClass().getResource("black.jpg"));
		c66=new JLabel("Node16");
		c66.setIcon(c6);
		c66.setBounds(550, 220, 500,200);
		p1.add(c66);
		
		l36=new JLabel();
		l36.setBounds(620, 200, 500,200);
		p1.add(l36);
		
		c7=new ImageIcon(this.getClass().getResource("black.jpg"));
		c77=new JLabel("Node19");
		c77.setIcon(c7);
		c77.setBounds(650, 170, 500,200);
		p1.add(c77);
		
		l37=new JLabel();
		l37.setBounds(720, 170, 500,200);
		p1.add(l37);
		
		c8=new ImageIcon(this.getClass().getResource("black.jpg"));
		c88=new JLabel("Node22");
		c88.setIcon(c8);
		c88.setBounds(750, 170, 500,200);
		p1.add(c88);
		
		l38=new JLabel();
		l38.setBounds(820, 150, 500,200);
		p1.add(l38);
		
		
		
		m1.add(i1);
		m1.add(i2);
		m1.add(i3);
		m1.add(i4);
		m1.add(i5);
		mbr.add(m1);
		
		
		i1.addActionListener(this);
		i2.addActionListener(this);
		i3.addActionListener(this);
		i4.addActionListener(this);
		i5.addActionListener(this);

		setSize(980,500);
		setVisible(true);
		add(p1);
		
		int[] ports = new int[]
			              		{8909,3939,1412,4445,4444,1111};

			              		for (int i = 0; i < 6; i++)
			              		{
			              			Thread t = new Thread(new PortListener(ports[i]));
			              			t.setName("Listener-" + ports[i]);
			              			t.start();

			              		}
		
	}
	
	public void actionPerformed(ActionEvent ae) 
	{
		Dbcon db=new Dbcon();
		Connection con=db.getConnection();
		if(ae.getSource()==i1)
		{
			try
			{
			String nname="";
			
				String cn4[]={"Node1","Node2","Node3","Node4","Node5","Node6","Node7","Node8","Node9","Node10","Node11","Node12","Node13","Node14","Node15","Node16","Node17","Node18","Node19","Node20","Node21","Node22","Node23"};
				JComboBox clust4=new JComboBox(cn4);
				JOptionPane.showMessageDialog(null,clust4,"Update Bandwidth",JOptionPane.QUESTION_MESSAGE);
				
				nname=clust4.getSelectedItem().toString();
					
				String Ener=JOptionPane.showInputDialog(null,"Enter Bandwidth");
				
				int dis=Integer.parseInt(Ener);
				Statement st=con.createStatement();
				String cname="NodesInfo";
				String n1="update "+cname+" set bw="+dis+" where node='"+nname+"' ";
				st.executeUpdate(n1);
				
				JOptionPane.showMessageDialog(null,"Bandwidth Updated Successfully");
				
			}catch(Exception es){System.out.println(es);}
			
		}
		if(ae.getSource()==i2)
		{
				try
				{
					ViewRouter r = new ViewRouter();
					r.setSize(700, 400);
					r.setVisible(true);
				
		}catch (Exception e) {
			// TODO: handle exception
		}

	}
		if(ae.getSource()==i3)
		{
			ViewAttackers r = new ViewAttackers();
			r.setSize(750, 400);
			r.setVisible(true);
		}
		
		if(ae.getSource()==i4)
		{
			ViewTimeDelay r1 = new ViewTimeDelay();
			r1.setSize(750, 400);
			r1.setVisible(true);
		}
		if(ae.getSource()==i5)
		{
			ViewDropped r1 = new ViewDropped();
			r1.setSize(750, 400);
			r1.setVisible(true);
		}

	}	
	public static void main(String[] args) throws SQLException
	{
		new Router();
	}

	
	class PortListener implements Runnable
	{
		int port;

		public PortListener(int port)
		{
			this.port = port;
		}

		public void run()
		{
			Dbcon db = new Dbcon();
			Connection connect=db.getConnection();
			
			if(this.port==8909)
			{
				try
				{
					ServerSocket ss = new ServerSocket(8909);
					Socket cn;
					while (true) 
					{
					cn = ss.accept();
					
					DataInputStream in3=new DataInputStream(cn.getInputStream());
					
	